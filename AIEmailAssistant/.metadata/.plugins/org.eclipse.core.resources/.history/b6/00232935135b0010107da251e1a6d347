package com.email_writer.controller;

import java.util.*;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.client.WebClient;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

@Service
public class EmailGeneratorService {
	@Value("${gemini.api.url}")
	private String geminiApiUrl;

	@Value("${gemini.api.key}")
	private String geminiApiKey;

	private final WebClient webclient;

	public EmailGeneratorService(WebClient.Builder webClient) {
		this.webclient = webClient.build();
	}

	public String generateEmailReply(EmailRequest emailRequest) {
		// build prompt
		String prompt = buildPrompt(emailRequest);

		Map<String, Object> req = Map.of("contents",
				new Object[] { Map.of("parts", new Object[] { Map.of("text", prompt) }) });
		String response = webclient.post().uri(geminiApiUrl + geminiApiKey).header("Content-Type", "application/json").bodyValue(req)
				.retrieve().bodyToMono(String.class).block();
		return extractResponseContent(response);

	}

	private String extractResponseContent(String response) {
		ObjectMapper objectMapper = new ObjectMapper();
		try {
			JsonNode rootNode = objectMapper.readTree(response);
			return rootNode.path("candidates").get(0)
					.path("content").get(0)
					.path("parts").get(0)
					.path("text").asText();

		} catch (JsonProcessingException e) {
			e.printStackTrace();
		}
		return null;
	}

	private String buildPrompt(EmailRequest emailRequest) {
		StringBuilder prompt = new StringBuilder();
		prompt.append(
				"Generate a professional email reply for the following email content.Please Don't generate subject line.");
		if (emailRequest.getTone() != null && !emailRequest.getTone().isEmpty()) {
			prompt.append("Use a ").append(emailRequest.getTone()).append((" tone"));
		}
		prompt.append("\n Original email :\n").append(emailRequest.getEmailContent());
		return prompt.toString();
	}

}
